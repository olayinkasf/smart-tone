/*
 * Copyright 2015
 *
 * Olayinka S. Folorunso <mail@olayinkasf.com>
 * http://olayinkasf.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */





apply plugin: 'com.android.application'
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 11
        versionCode 79
        versionName "2.4.0"

    }

    signingConfigs {
        release {
            storeFile file("${keystorePath}")
            keyAlias "${releaseKeyAlias}"
            storePassword "${keystorePassword}"
            keyPassword "${releaseKeyPassword}"
        }

    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }


        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def bType = variant.buildType.name
                if (bType.equals("release") || bType.equals("debug")) {
                    def apk = output.outputFile.name;
                    apk = apk.replace("nunc", "nunc-$defaultConfig.versionCode" + "-" + "$defaultConfig.versionName")
                    output.outputFile = new File("$rootProject.projectDir/binaries", apk)
                }
            }
        }
    }

}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':app')
}

